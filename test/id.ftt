

def Id : sig {tp : Type ; l : tp ; r : tp} -> Type => 
    \args => (B : args.tp -> Type) -> B args.l -> B args.r

def refl (A : Type) (x : A) : Id [tp => A ; l => x ; r => x] => 
    {pt => \B p => p}


def sym (p : Id) : Id [tp => p.tp ; l => p.r ; r => p.l] =>
    {pt => p.pt (\y => Id {tp => p.tp ; l => y ; r => p.l}) (\B p => p)}
